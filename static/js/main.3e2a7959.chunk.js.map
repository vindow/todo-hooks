{"version":3,"sources":["components/listItem.js","components/todoList.js","App.js","reportWebVitals.js","index.js"],"names":["ListItem","props","callback","content","className","text","onClick","id","TodoList","storedTodos","JSON","parse","localStorage","getItem","uuidv4","useState","todos","setTodos","newTodo","setNewTodo","useEffect","setItem","stringify","deleteTodo","filter","todo","todoComponents","i","length","push","name","placeholder","value","onChange","ev","target","disabled","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAaeA,MAVf,SAAkBC,GAChB,IAAOC,EAAqBD,EAArBC,SAAUC,EAAWF,EAAXE,QACjB,OACE,sBAAKC,UAAU,WAAf,UACE,sBAAMA,UAAU,eAAhB,SAAgCD,EAAQE,OACxC,wBAAQD,UAAU,cAAcE,QAAS,kBAAMJ,EAASC,EAAQI,KAAhE,wB,MCqCSC,MAxCf,WAEE,IAAIC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,yBAC9B,OAAhBJ,IACFA,EAAc,CAAC,CAACF,GAAIO,cAAUT,KAAM,qCAGtC,MAA0BU,mBAASN,GAAnC,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAIAC,qBAAU,WACRD,EAAW,IACXP,aAAaS,QAAQ,uBAAwBX,KAAKY,UAAUN,MAC3D,CAACA,IAOJ,IALA,IAAIO,EAAa,SAAChB,GAChBU,EAASD,EAAMQ,QAAO,SAAAC,GAAI,OAAIA,EAAKlB,KAAOA,OAGxCmB,EAAiB,GACZC,EAAI,EAAGA,EAAIX,EAAMY,OAAQD,IAChCD,EAAeG,KAAK,cAAC,EAAD,CAA4B3B,SAAUqB,EAAYpB,QAASa,EAAMW,IAAlDX,EAAMW,GAAGpB,KAG9C,OACE,sBAAKH,UAAU,WAAf,UACE,4CACA,qBAAKA,UAAU,gBAAf,SACGsB,IAEH,sBAAKtB,UAAU,UAAf,UACE,0BAAU0B,KAAK,UAAU1B,UAAU,cAAc2B,YAAY,cAAcC,MAAOd,EAASe,SAAU,SAAAC,GAAE,OAAIf,EAAWe,EAAGC,OAAOH,UAChI,wBAAQ5B,UAAU,gBAAgBE,QAAS,kBAAMW,GAAS,SAAAD,GAAK,4BAAQA,GAAR,CAAe,CAACT,GAAIO,cAAUT,KAAMa,SAAYkB,SAAsB,KAAZlB,EAAzH,wBC7BOmB,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3e2a7959.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./listItem.css\";\r\n\r\nfunction ListItem(props) {\r\n  const {callback, content} = props;\r\n  return (\r\n    <div className=\"listItem\">\r\n      <span className=\"listItemText\">{content.text}</span>\r\n      <button className=\"checkButton\" onClick={() => callback(content.id)}>âœ“</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListItem;","import React, { useState, useEffect } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ListItem from './listItem';\r\nimport \"./todoList.css\";\r\n\r\nfunction TodoList() {\r\n\r\n  let storedTodos = JSON.parse(localStorage.getItem(\"react.todoList.todos\"));\r\n  if (storedTodos === null) {\r\n    storedTodos = [{id: uuidv4(), text: \"Add something to the to-do list\"}];\r\n  }\r\n\r\n  const [todos, setTodos] = useState(storedTodos);\r\n  const [newTodo, setNewTodo] = useState(\"\");\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    setNewTodo(\"\");\r\n    localStorage.setItem(\"react.todoList.todos\", JSON.stringify(todos));\r\n  }, [todos])\r\n  \r\n  let deleteTodo = (id) => {\r\n    setTodos(todos.filter(todo => todo.id !== id));\r\n  }\r\n\r\n  let todoComponents = [];\r\n  for (let i = 0; i < todos.length; i++) {\r\n    todoComponents.push(<ListItem key={todos[i].id} callback={deleteTodo} content={todos[i]}></ListItem>)\r\n  }\r\n\r\n  return (\r\n    <div className=\"todoList\">\r\n      <h1>To-Do List</h1>\r\n      <div className=\"todoListItems\">\r\n        {todoComponents}\r\n      </div>\r\n      <div className=\"newTodo\">\r\n        <textarea name=\"content\" className=\"newTodoText\" placeholder=\"New Todo...\" value={newTodo} onChange={ev => setNewTodo(ev.target.value)}></textarea>\r\n        <button className=\"newTodoButton\" onClick={() => setTodos(todos => [...todos, {id: uuidv4(), text: newTodo}])} disabled={newTodo === \"\"}>Add</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;","import TodoList from './components/todoList.js';\n\nfunction App() {\n  return (\n    <div>\n      <TodoList></TodoList>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}